import time
import requests
from datetime import datetime
from SettingsReader import settingsReader


class Vk:
    def __init__(self, token, Version):
        """
        :param token: access_token –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param Version: –≤–µ—Ä—Å–∏—è API
        """
        self.url = 'https://api.vk.com/method/'
        self.access_token = token
        self.apiVersion = Version

    def method(self, methodName, methodParams=None):
        """
        :param methodName: –∏–º—è –º–µ—Ç–æ–¥–∞
        :param methodParams: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–∞
        :return: –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        """
        if methodParams is None:
            methodParams = {}
        methodParams['v'] = self.apiVersion
        methodParams['access_token'] = self.access_token
        r = requests.post(self.url + methodName, methodParams)
        r_json = r.json()
        if 'error' in r_json:
            raise Exception(f'[{r_json["error"]["error_code"]}] {r_json["error"]["error_msg"]}')
        return r_json['response']


def right_case(t, text_forms):
    """
    :param t: —á–∏—Å–ª–æ
    :param text_forms: –º–∞—Å—Å–∏–≤
    :return: –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞
    """
    t = t % 100
    t1 = t % 10
    if 10 < t < 20:
        return text_forms[2]
    if 1 < t1 < 5:
        return text_forms[1]
    if t1 == 1:
        return text_forms[0]
    return text_forms[2]


deleteMessage = "–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–±–µ –±–æ—Ç –æ—Ç –º–æ–µ–≥–æ –ª–∏—Ü–∞.\n" \
                "–ú—ã –¥–æ–ª–≥–æ –Ω–µ –æ–±—â–∞–ª–∏—Å—å, –ø–æ—ç—Ç–æ–º—É –±–æ—Ç—É –ø—Ä–∏—à–ª–æ—Å—å —É–¥–∞–ª–∏—Å—å —Ç–µ–±—è –∏–∑ –¥—Ä—É–∑–µ–πüò∂"
userCountRemove = 0

access_token = settingsReader("access_token")
apiVersion = settingsReader("apiVersion")
userTime = settingsReader("time")
botTime = datetime.strptime(userTime, "%d.%m.%Y %H:%M:%S")
unixTime = time.mktime(botTime.timetuple())

vk = Vk(access_token, apiVersion)

userFriendsList = vk.method("friends.get", {"count": 10000, "name_case": "acc", "fields": "domain"})
print(f'–£ –≤–∞—Å {userFriendsList["count"]} {right_case(userFriendsList["count"], ["–¥—Ä—É–≥", "–¥—Ä—É–≥–∞", "–¥—Ä—É–∑–µ–π"])}. '
      '–ù–∞—á–∏–Ω–∞—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É. –°–µ–π—á–∞—Å —è –≤—ã–¥–∞–º —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö, –∫—Ç–æ –ø–∏—Å–∞–ª —Ç–µ–±–µ —Ä–∞–Ω—å—à–µ, —á–µ–º —Ç—ã —É–∫–∞–∑–∞–ª –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏ —Å–ø—Ä–æ—à—É: '
      '"—É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥—Ä—É–∑–µ–π?"\n'
      'Y - –¥–∞, N - –Ω–µ—Ç')

userFriendsListID = userFriendsList['items']
for i in userFriendsListID:
    try:
        lastMessageId = vk.method("messages.getConversationsById", {"peer_ids": i['id']})['items'][0]['last_message_id']
    except Exception:
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥")
        time.sleep(5)
        continue
    if lastMessageId == 0:
        lastMessageTime = 0
    else:
        try:
            lastMessageTime = vk.method("messages.getById", {"message_ids": lastMessageId})['items'][0]['date']
        except Exception:
            print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥")
            time.sleep(5)
            continue

    if lastMessageTime < unixTime:
        answer = input(f"–£–¥–∞–ª–∏—Ç—å {i['first_name']} {i['last_name']} (https://vk.com/{i['domain']}) –∏–∑ –¥—Ä—É–∑–µ–π? ")
        if answer.lower() == "y":
            userCountRemove += 1
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω –∏–∑ –¥—Ä—É–∑–µ–π!")
            try:
                vk.method("messages.send", {"user_id": i['id'], "message": deleteMessage, "random_id": 0})
            except Exception:
                print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥")
                time.sleep(5)
                continue
            try:
                vk.method("friends.delete", {"user_id": i['id']})
            except Exception:
                print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ë–æ—Ç –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 5 —Å–µ–∫—É–Ω–¥")
                time.sleep(5)
                continue

print(f"–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! –í—ã —É–¥–∞–ª–∏–ª–∏ {userCountRemove} "
      f"{right_case(userCountRemove, ['–¥—Ä—É–≥–∞', '–¥—Ä—É–∑–µ–π', '–¥—Ä—É–∑–µ–π'])}")
